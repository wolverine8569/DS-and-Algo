double MedianOfArrays(vector<int>& array1, vector<int>& array2)
{
    if(array1.size()>array2.size())
    return MedianOfArrays(array2,array1);
    int n1=array1.size();
    int n2=array2.size();
    int low=0,high=n1;
    while(low<=high){
        int partitionX=(low+high)/2;
        int partitionY=(n1+n2+1)/2-partitionX;
        int l1;
        if(partitionX==0)
        l1=INT_MIN;
        else
        l1=array1[partitionX-1];
        int l2;
        if(partitionY==0)
        l2=INT_MIN;
        else
        l2=array2[partitionY-1];
        int r1;
        if(partitionX==n1)
        r1=INT_MAX;
        else
        r1=array1[partitionX];
        int r2;
        if(partitionY==n2)
        r2=INT_MAX;
        else
        r2=array2[partitionY];
        if(l1<=r2 && l2<=r1){
            if((n1+n2)%2==0)
            return ((double)max(l1,l2)+min(r1,r2))/2;
            else
            return (double)max(l1,l2);
        }
        else if(l1>r2){
            high=partitionX-1;
        }
        else
        low=partitionX+1;
    }
    
}
